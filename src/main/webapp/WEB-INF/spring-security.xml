<beans:beans xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security-3.2.xsd">
		
	<global-method-security secured-annotations="enabled" pre-post-annotations="enabled"/>
	
	<!-- Security configuration for REST services. 
		 http://www.networkedassets.com/configuring-spring-security-for-a-restful-web-services/
	-->
	<http pattern="/rest/**" authentication-manager-ref="authenticationManager"
		create-session="stateless" use-expressions="true" >
		<intercept-url pattern="/rest/login" requires-channel="https" method="POST" access="permitAll()" />
		<intercept-url pattern="/rest/**" requires-channel="https" method="GET" access="isAuthenticated()" />
		<intercept-url pattern="/rest/**" requires-channel="https" method="POST" access="isAuthenticated()" />
		<intercept-url pattern="/rest/**" requires-channel="https" method="PUT" access="isAuthenticated()" />
		<intercept-url pattern="/rest/**" requires-channel="https" method="DELETE" access="isAuthenticated()" />
		<http-basic entry-point-ref="restServicesEntryPoint" />
		<custom-filter ref="customFilters" position="FORM_LOGIN_FILTER" />
	</http>
	<!-- Entry point for REST service. -->
	<beans:bean id="restServicesEntryPoint" class="com.pkstudio.hive.security.RestAuthenticationEntryPoint" />
	<!-- Getting access token filter -->
	<beans:bean id="statelessLoginFilter" class="com.pkstudio.hive.security.StatelessLoginFilter">
		<beans:constructor-arg index="0" value="/rest/login"/>
		<beans:constructor-arg index="1" ref="tokenAuthenticationService"/>
		<beans:constructor-arg index="2" ref="authenticationManager"/>
		<beans:constructor-arg index="3" ref="userDetailsService"/>
		<beans:constructor-arg index="4" ref="defaultRestErrorResolver"/>
		<beans:property name="authenticationManager" ref="authenticationManager"/>
	</beans:bean>
	<beans:bean id="customFilters" class="org.springframework.web.filter.CompositeFilter">
    <beans:property name="filters">
        <beans:list>
        	<beans:ref bean="statelessCSRFFilter"/>
            <beans:ref bean="statelessLoginFilter"/>
            <beans:ref bean="statelessAuthenticationFilter"/>
        </beans:list>
    </beans:property>
	</beans:bean>
	
	
	<!-- Security configuration for other resources. Use login form. -->
	<http use-expressions="true" create-session="stateless">
		<intercept-url pattern="/**" access="permitAll()" />
		<form-login />
	</http>
	<!-- Authentication manager. -->
	<authentication-manager alias="authenticationManager">
		<authentication-provider>
	    	<jdbc-user-service id="userService" data-source-ref="dataSource"
				users-by-username-query="select username, password, account_enabled from users where username=?"
				authorities-by-username-query="select username, authority from users u left join user_authorities a on u.id = a.user_id where username=?" />
	  	</authentication-provider>
	</authentication-manager>
	
</beans:beans>